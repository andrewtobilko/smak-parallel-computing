package com.tobilko.lab2;

/**
 *
 В программах класс CPUQueue описывает очередь, класс CPUProcess моделирует поток процессов,
 а класс CPU – поток обслуживания процесса центральным процессором.
 Очереди, потоки процессов и обслуживание процесса моделируются с помощью объектов
 соответствующего класса. Параметры очереди моделируются с помощью алгоритмов вставки
 и извлечения процесса из очереди. Параметром  процесса является интервал времени
 между двумя последовательными генерациями процессов. Параметром процессора является
 время обслуживания процесса.
 Случайные времена для интервалов между моментами генерации процессов и для времен
 обслуживания распределены по равномерному закону   с заданными верхней и нижней
 границами (см. метод random() в классе Math). Исходными данными для моделирования
 являются количество процессов, которые должны быть сгенерированы (для каждого потока
 процессов), а также нижние и верхние границы для потоков.
 *
 * Программа моделирует обслуживание двух потоков процессов с разными
 параметрами двумя центральными процессорами и двумя очередями. Каждый процесс
 поступает в свою очередь и обслуживается своим процессором. Если первый процессор
 свободен и очередь первого потока процессов пуста, процессор выбирает процесс из
 второй очереди, однако, если во время обработки процесса, генерируется процесс первого
 потока, обработка процесса прерывается и он возвращается в свою очередь как первый в
 очереди. Определите максимальные длины очередей и количество прерванных процессов
 второго потока.

 * Created by Andrew Tobilko on 9/25/17.
 */


public final class Lab2 {

    private final static int LOWER_THREAD_BOUND = 1;
    private final static int UPPER_THREAD_BOUND = 10;

    public static void main(String[] args) {



    }

}
